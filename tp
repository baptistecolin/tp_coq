Check 3.
Check nat.
Variable A B C: Prop.
Theorem identite : A->A.
intro.
apply H.
Qed.

Print identite.

Theorem gen_id: forall Z: Prop, Z->Z.
intro.
intro.
apply H.
Qed.

Print gen_id.

Theorem identite2: A->A.
apply gen_id.
Qed.

Theorem th1: A->B->A.
intro.
intro.
apply H.
Qed.

Theorem th2: (A->B->C)->(A->B)->A->C.
intros.
apply H.
apply H1.
apply H0.
apply H1.
Qed.

Theorem th3: (A->B)->(C->A)->C->B.
intros.
apply H.
apply H0.
apply H1.
Qed.

Theorem th4: A->(A\/B).
intro.
left.
apply H.
Qed.

Theorem th5: A->B->(A/\B).
intros.
split.
apply H.
apply H0.
Qed.

Theorem th6: (A->B)->(C->B)->((A\/C)->B).
intros.
elim H1.
apply H.
apply H0.
Qed.

Theorem th8: (A\/(B\/C))->((A\/B)\/C).
intro.
elim H.
intros.
intuition.
intro.
intuition.
Qed.

Theorem th7: (~(A\/B))->(~A/\~B).
intro.
split.
intro.
tauto.
intro.
tauto.
Qed.

Theorem th9: (A->B)->(A/\C)->(B/\C).
intros.
split.
apply H.
apply H0.
apply H0.
Qed.

Theorem th10: ~~~A -> ~A.
intro.
intro.
tauto.
Qed.

Theorem th11: (A/\(B\/C))->((A/\B)\/(A/\C)).
intros.
elim H.
intros.
elim H1.
intros.
left.
split.
apply H0.
apply H2.
intro.
right.
split.
apply H0.
apply H2.
Qed.

Theorem th13: (~A/\~B)->(A\/B)->False.
intro.
intro.
tauto.
Qed.

Variable R: (nat*nat) -> Prop.

Theorem th14: (forall x: nat, forall y: nat, (R (x, y))) -> (forall x: nat, forall y: nat, (R (x, y))).
intro.
intro.
apply (H x).
Qed.

Variable P Q: nat -> Prop.
Theorem th15: (forall x: nat, (P x)/\(Q x)) -> ((forall x: nat, P(x))/\(forall x: nat, Q(x))).
intro.
split.
apply H.
apply H.
Qed.

